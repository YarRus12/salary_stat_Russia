import streamlit as st
import altair as alt
from prepare_data import main

CHOSEN_ACTIVITY = ['–¥–æ–±—ã—á–∞ –ø–æ–ª–µ–∑–Ω—ã—Ö –∏—Å–∫–æ–ø–∞–µ–º—ã—Ö', '–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞', '—Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ']



@st.cache_data(ttl=60 * 60 * 24)
def create_schedule(df, action):
    df = df[filtered_df['–í–∏–¥ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏'] == action]

    bar_chart = alt.Chart(df).mark_bar().encode(
        x=alt.X('year:O', axis=alt.Axis(format='')),
        y='–°—Ä–µ–¥–Ω—è—è –∑–∞—Ä–∞–±–æ—Ç–Ω–∞—è –ø–ª–∞—Ç–∞',
        color='–í–∏–¥ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏'
    ).properties(
        width=600,
        height=400
    )
    # –°–æ–∑–¥–∞–Ω–∏–µ –ª–∏–Ω–∏–∏ –∏–Ω—Ñ–ª—è—Ü–∏–∏ –Ω–∞ —É—Ä–æ–≤–Ω–µ –∏–Ω—Ñ–ª—è—Ü–∏–∏ –≤ –ø—Ä–æ—à–ª–æ–º –≥–æ–¥—É
    line_chart = alt.Chart(df).mark_line(color='red').encode(
        y=alt.Y('–ò–Ω—Ñ–ª—è—Ü–∏—è –≤ –ø—Ä–æ—à–ª–æ–º –≥–æ–¥—É', axis=alt.Axis(titleColor='white', labelColor='red')),
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–≤–µ—Ç–∞ —Ç–µ–∫—Å—Ç–∞ –ø–æ –æ—Å–∏ Y
        x=alt.X('year:O', axis=alt.Axis(format=''))  # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–≤–µ—Ç–∞ —Ç–µ–∫—Å—Ç–∞ –ø–æ –æ—Å–∏ X
    )

    # –ù–∞–ª–æ–∂–µ–Ω–∏–µ –ª–∏–Ω–∏–∏ –Ω–∞ —Å—Ç–æ–ª–±—á–∞—Ç—É—é –¥–∏–∞–≥—Ä–∞–º–º—É
    combined_chart = alt.layer(bar_chart, line_chart).resolve_scale(y='independent')

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞ –≤ Streamlit
    st.altair_chart(combined_chart, use_container_width=True)


if __name__ == '__main__':
    st.set_page_config(layout="centered", page_icon="üí¨", page_title="–ê–Ω–∞–ª–∏–∑ –Ω–æ–º–∏–Ω–∞–ª—å–Ω—ã—Ö –∑–∞—Ä–∞–±–æ—Ç–Ω—ã—Ö –ø–ª–∞—Ç –≤ –†–æ—Å—Å–∏–∏")
    st.title('–ê–Ω–∞–ª–∏–∑ –∑–∞—Ä–ø–ª–∞—Ç –≤ –†–æ—Å—Å–∏–∏')

    # Load data
    res = main(choosen_activity=CHOSEN_ACTIVITY)
    res.year = res.year.astype('int')
    min_value = res['year'].min()
    max_value = res['year'].max()
    activity = res['–í–∏–¥ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏'].unique()

    selected_activity = st.multiselect(
        '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–∏–¥ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏',
        activity, CHOSEN_ACTIVITY)

    from_year, to_year = st.slider(
        'Which years are you interested in?',
        min_value=min_value,
        max_value=max_value,
        value=[min_value, max_value])

    filtered_df = res[
        (res['–í–∏–¥ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏'].isin(selected_activity))
        & (res['year'] <= to_year)
        & (from_year <= res['year'])
        ]

    st.write("")
    st.write("")
    st.write("")

    for activity in selected_activity:
        create_schedule(df=filtered_df, action=activity)

